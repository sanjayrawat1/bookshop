server:
  port: 9002
  shutdown: graceful
  netty:
    # how long to wait for a TCP connection to be established with the server.
    connection-timeout: 2s
    # how long to wait before closing a TCP connection if no data is transferred.
    idle-timeout: 15s

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: refresh

spring:
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: user
    password: password
    url: r2dbc:postgresql://localhost:5432/bookshop_order
    pool:
      # the maximum time to wait to get a connection from the pool
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/bookshop_order
  config:
    # Imports configuration data from a config server when available.
    import: "optional:configserver:"
  cloud:
    config:
      # The URL of the config server.
      uri: http://localhost:8888
      # Timeout on waiting to connect to the config server (ms).
      request-connect-timeout: 5000 # 5s
      # Timeout on waiting to read configuration data from the config server (ms).
      request-read-timeout: 5000 # 5s
      # Makes a failure to connect to the config server fatal.
      fail-fast: false # In production, set to true
      retry:
        # Maximum number of attempts.
        max-attempts: 6
        # Initial retry interval for backoff (ms).
        initial-interval: 1000 # 1s
        # Maximum retry interval for backoff (ms).
        max-interval: 2000 # 2s
        # Multiplier to compute the next interval.
        multiplier: 1.1

bookshop:
  greeting: Welcome to the local book order!
  catalog-service-uri: "http://localhost:9001"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-service
  labels:
    app: edge-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge-service
  template:
    metadata:
      labels:
        app: edge-service
    spec:
      containers:
        - name: edge-service
          image: edge-service
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 5" ]
          ports:
            - containerPort: 9000
          env:
            - name: CATALOG_SERVICE_URL
              value: http://catalog-service
            - name: ORDER_SERVICE_URL
              value: http://order-service
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-service
            - name: SPRING_DATA_REDIS_HOST
              value: bookshop-redis
            - name: SPA_URL
              value: http://bookshop-ui
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI
              value: http://bookshop-keycloak/realms/Bookshop
          # configuration for the liveness probe.
          livenessProbe:
            # uses and HTTP GET request to get the liveness state.
            httpGet:
              # the endpoint to call for the liveness state.
              path: /management/health/liveness
              # the port to use to fetch the liveness state.
              port: 9000
            # and initial delay before starting checking the liveness state.
            initialDelaySeconds: 10
            # the frequency for checking the liveness state.
            periodSeconds: 5
          # configuration for the readiness probe.
          readinessProbe:
            httpGet:
              path: /management/health/readiness
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 15

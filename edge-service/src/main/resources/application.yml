server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          # type of connection pool (elastic, fixed, or disabled)
          type: elastic
          # idle time after which the communication channel will be closed
          max-idle-time: 15s
          # time after which communication channel will be closed
          max-life-time: 60s
      default-filters:
        - name: Retry
          args:
            retries: 3
            method: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
          predicates:
            - Path=/books/**
          filters:
            # name of the filter, you can choose to apply it to specific routes or define it as a default filter, like Retry filter
            - name: CircuitBreaker
              args:
                # name of the circuit breaker
                name: catalogCircuitBreaker
                # forwards request to this URI when the circuit is open
                fallbackUri: forward:/catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              # no fallback is defined for this circuit breaker
              args:
                name: orderCircuitBreaker

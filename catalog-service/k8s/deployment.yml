apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  labels:
    app: catalog-service
spec:
  # how many pod replicas should be deployed.
  replicas: 1
  # defines the labels used to select the Pods to be scaled.
  selector:
    matchLabels:
      app: catalog-service
  # the template for creating a Pod.
  template:
    metadata:
      # labels attached to the Pod object. they should match the ones used as selectors.
      labels:
        app: catalog-service
    spec:
      # the list of containers in the Pod (one in this case)
      containers:
        # the name of the pod
        - name: catalog-service
          # the image used to run the container. no tag is defined, so "latest" will be used implicitly.
          image: catalog-service
          # instruct k8s to pull the image from a container registry only if it's not present locally yet.
          imagePullPolicy: IfNotPresent
          lifecycle:
            # makes k8s wait 5 seconds before sending the SIGTERM signal to the Pod.
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 5" ]
          ports:
            # the ports exposed by the container
            - containerPort: 9001
          # the list of environment variables passed to the Pod.
          env:
            - name: BPL_JVM_THREAD_COUNT
              value: "50"
            - name: SPRING_CLOUD_CONFIG_URI
              value: http://config-service
            - name: SPRING_DATASOURCE_URL
              # the hostname part of the URL is the name of the Service object that was used to expose the database.
              value: jdbc:postgresql://bookshop-postgres/bookshop_catalog
            - name: SPRING_PROFILES_ACTIVE
              value: test-data
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: http://bookshop-keycloak/realms/Bookshop
